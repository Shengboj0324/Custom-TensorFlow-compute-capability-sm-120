# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.8)
   message(FATAL_ERROR "CMake >= 2.8.0 required")
endif()
if(CMAKE_VERSION VERSION_LESS "2.8.3")
   message(FATAL_ERROR "CMake >= 2.8.3 required")
endif()

#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple calls to find_package to append duplicated properties.
if(NOT _TensorFlowSM120_TARGETS_LOADED)
  set(_TensorFlowSM120_TARGETS_LOADED 1)

  # Create imported target TensorFlowSM120::sm120_cuda_kernels
  add_library(TensorFlowSM120::sm120_cuda_kernels SHARED IMPORTED)

  set_target_properties(TensorFlowSM120::sm120_cuda_kernels PROPERTIES
    INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include/tensorflow_sm120"
    INTERFACE_LINK_LIBRARIES "\$<LINK_ONLY:CUDA::cudart>;\$<LINK_ONLY:CUDA::cublas>;\$<LINK_ONLY:CUDA::cudnn>"
  )

  # Create imported target TensorFlowSM120::sm120_tensorflow_ops
  add_library(TensorFlowSM120::sm120_tensorflow_ops SHARED IMPORTED)

  set_target_properties(TensorFlowSM120::sm120_tensorflow_ops PROPERTIES
    INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include/tensorflow_sm120"
    INTERFACE_LINK_LIBRARIES "TensorFlowSM120::sm120_cuda_kernels"
  )

endif()

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
